@mixin sizes($width, $height) {
    width: $width;
    height: $height;
}

@mixin setTransform($display : flex, $flexDirection: row,
    $justify: center, $currentScale : 1, $currentWidth: 1, $currentHeight: 1) {
    @include setFlexPosition($display , $flexDirection , $justify);
    @include setCustomizableSize($currentScale $currentWidth, $currentHeight);
}

@mixin setFlexPosition ($display : flex, $flexDirection: row, $justify: center) {
    display: $display;
    flex-direction: $flexDirection;
    justify-content: $justify ;
}

@mixin customizableSize($currentScale : 1, $currentWidth: 1, $currentHeight: 1) {
    @include setScale($currentScale);
    @include setWidth($currentWidth);
    @include setHeight($currentHeight);
}

@mixin setScale($currentScale : 1) {
    scale: $currentScale;
}

@mixin setWidth($currentWidth : 1) {
    width: $currentWidth;
}

@mixin setHeight ($currentHeight : 1) {
    height: $currentHeight;
}

@mixin gridCustomizable($columnGap: 5px, $rowGap: 5px, $displayGender: "grid") {
    @include setGridColumnGap($columnGap);
    @include setGridRowGap($rowGap);
    @include setDysplayGender($displayGender);
}

@mixin setGridColumnGap($columnGap: 5px) {
    grid-column-gap: $columnGap;
}

@mixin setGridRowGap($rowGap: 5px) {
    grid-Row-gap: $rowGap;
}

@mixin setDysplayGender($displayGender: "grid") {
    grid-area: $displayGender;
}

@mixin callForTool($index , $to)
{
    @for $i from index through $to {
        .col-#{$i} {
            width: 10% * $i;
        }
    }
}

